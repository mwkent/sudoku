package com.sudoku;

/**
 * @author Matt Kent
 */
public class Boards {

	static int[][] getEasyBoard() {
		return new int[][] //
		{ //
		/*    */{ 0, 0, 0, 2, 6, 0, 7, 0, 1 },//
				{ 6, 8, 0, 0, 7, 0, 0, 9, 0 }, //
				{ 1, 9, 0, 0, 0, 4, 5, 0, 0 },//
				{ 8, 2, 0, 1, 0, 0, 0, 4, 0 }, //
				{ 0, 0, 4, 6, 0, 2, 9, 0, 0 },//
				{ 0, 5, 0, 0, 0, 3, 0, 2, 8 }, //
				{ 0, 0, 9, 3, 0, 0, 0, 7, 4 },//
				{ 0, 4, 0, 0, 5, 0, 0, 3, 6 }, //
				{ 7, 0, 3, 0, 1, 8, 0, 0, 0 } //
		};
	}

	static int[][] getMediumBoard() {
		return new int[][] //
		{ //
		/*    */{ 0, 2, 0, 6, 0, 8, 0, 0, 0 },//
				{ 5, 8, 0, 0, 0, 9, 7, 0, 0 },//
				{ 0, 0, 0, 0, 4, 0, 0, 0, 0 }, //
				{ 3, 7, 0, 0, 0, 0, 5, 0, 0 },//
				{ 6, 0, 0, 0, 0, 0, 0, 0, 4 }, //
				{ 0, 0, 8, 0, 0, 0, 0, 1, 3 },//
				{ 0, 0, 0, 0, 2, 0, 0, 0, 0 }, //
				{ 0, 0, 9, 8, 0, 0, 0, 3, 6 },//
				{ 0, 0, 0, 3, 0, 6, 0, 9, 0 }, //
		};
	}

	static int[][] getHardBoard() {
		return new int[][] //
		{ //
		/*    */{ 0, 0, 0, 6, 0, 0, 4, 0, 0 },//
				{ 7, 0, 0, 0, 0, 3, 6, 0, 0 }, //
				{ 0, 0, 0, 0, 9, 1, 0, 8, 0 },//
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //
				{ 0, 5, 0, 1, 8, 0, 0, 0, 3 },//
				{ 0, 0, 0, 3, 0, 6, 0, 4, 5 }, //
				{ 0, 2, 0, 2, 0, 0, 0, 6, 0 },//
				{ 9, 0, 3, 0, 0, 0, 0, 0, 0 }, //
				{ 0, 2, 0, 0, 0, 0, 1, 0, 0 } //
		};
	}

	static int[][] getHardestBoard() {
		return new int[][] //
		{ //
		/*    */{ 2, 0, 0, 3, 0, 0, 0, 0, 0 },//
				{ 8, 0, 4, 0, 6, 2, 0, 0, 3 }, //
				{ 0, 1, 3, 8, 0, 0, 2, 0, 0 },//
				{ 0, 0, 0, 0, 2, 0, 3, 9, 0 }, //
				{ 5, 0, 7, 0, 0, 0, 6, 2, 1 },//
				{ 0, 3, 2, 0, 0, 6, 0, 0, 0 }, //
				{ 0, 2, 0, 0, 0, 9, 1, 4, 0 },//
				{ 6, 0, 1, 2, 5, 0, 8, 0, 9 }, //
				{ 0, 0, 0, 0, 0, 1, 0, 0, 2 } //
		};
	}

	static int[][] allZeros() {
		return new int[][] //
		{ //
		/*    */{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },//
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },//
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },//
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },//
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 } //
		};
	}

	static int[][] completedBox() {
		return new int[][] //
		{ //
		/*    */{ 1, 2, 3, 0, 0, 0, 0, 0, 0 },//
				{ 6, 5, 4, 0, 0, 0, 0, 0, 0 }, //
				{ 7, 8, 9, 0, 0, 0, 0, 0, 0 },//
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },//
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },//
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 } //
		};
	}

	static int[][] invalidBox() {
		return new int[][] //
		{
		/*    */{ 1, 2, 3, 0, 0, 0, 0, 0, 0 },//
				{ 6, 5, 4, 0, 0, 0, 0, 0, 0 }, //
				{ 7, 8, 8, 0, 0, 0, 0, 0, 0 },//
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },//
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },//
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0 } //
		};
	}

	static int[][] completedBoard() {
		return new int[][] //
		{
		/*    */{ 4, 3, 5, 2, 6, 9, 7, 8, 1 },//
				{ 6, 8, 2, 5, 7, 1, 4, 9, 3 },//
				{ 1, 9, 7, 8, 3, 4, 5, 6, 2 },//
				{ 8, 2, 6, 1, 9, 5, 3, 4, 7 },//
				{ 3, 7, 4, 6, 8, 2, 9, 1, 5 },//
				{ 9, 5, 1, 7, 4, 3, 6, 2, 8 },//
				{ 5, 1, 9, 3, 2, 6, 8, 7, 4 },//
				{ 2, 4, 8, 9, 5, 7, 1, 3, 6 },//
				{ 7, 6, 3, 4, 1, 8, 2, 5, 9 } //
		};
	}

}
